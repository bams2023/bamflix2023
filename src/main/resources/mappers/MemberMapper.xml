<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bamflix.domain.member.MemberMapper">

  <!-- member 테이블 전체 컬럼 -->
  <sql id="memberColumns">
    id
        , login_id
        , password
        , name
        , email
        , phone
        , gender
        , birthday
        , delete_yn
        , created_date
        , modified_date
  </sql>

  <!-- 회원 정보 저장 (회원가입) -->
  <insert id="save" parameterType="com.bamflix.domain.member.MemberRequest"
    useGeneratedKeys="true" keyProperty="id">
    INSERT INTO member (
    <include refid="memberColumns"/>
    ) VALUES (
    #{id}
    , #{loginId}
    , #{password}
    , #{name}
    , #{email}
    , #{phone}
    , #{gender}
    , #{birthday}
    , 0
    , NOW()
    , NULL
    )
  </insert>

  <!-- 회원 상세정보 조회 -->
  <select id="findByLoginId" parameterType="string"
    resultType="com.bamflix.domain.member.MemberResponse">
    SELECT
    <include refid="memberColumns"/>
    FROM
    member
    WHERE
    delete_yn = 0 AND login_id = #{value}
  </select>

  <!-- 회원 정보 수정 -->
  <update id="update" parameterType="com.bamflix.domain.member.MemberRequest">
    UPDATE member
    SET
    modified_date = NOW()
    , name = #{name}
    , email = #{email}
    , birthday = #{birthday}
    <if test="password != null and password != ''">
      , password = #{password}
    </if>
    WHERE
    id = #{id}
  </update>

  <!-- 회원 정보 삭제 (회원 탈퇴) -->
  <delete id="deleteById" parameterType="long">
    UPDATE member
    SET delete_yn = 1
    WHERE id = #{id}
  </delete>

  <!-- 회원 수 카운팅 (ID 중복 체크) -->
  <select id="countByLoginId" parameterType="string" resultType="int">
    SELECT COUNT(*)
    FROM member
    WHERE login_id = #{value}
  </select>

</mapper>